
* enable service per user, so kiosk starts, but user not









# check on fresh mate system
dconf dump /org/mate/power-manager/





# reinstall window manager
sudo apt install marco


# manage via http: Tooloop-Settings-Server
https://github.com/vollstock/Tooloop-Settings-Server


# ureadahead quiet
sudo mkdir /etc/systemd/system/ureadahead.service.d/
sudo nano /etc/systemd/system/ureadahead.service.d/quiet.conf

[Service]
ExecStart=
ExecStart=/sbin/ureadahead -q







# Set resolution
# xrandr --output <YOUR_DISPLAY> --mode <RESOLUTION>  --rate <REFRESHRATE> &

# Turn screen saver off
xset s 0 &
xset s blank &
xset s off &

# Disable DPMS (Energy Star) features
xset dpms 0 0 0 &
xset -dpms &

# Disable bell
xset b off &






## Screensaver

2017-08-01
display off after 10min(?)

check with:
	xset q
	dpms needs to be disabled - nochange!
	xset s off - yes! screensaver - timeout = 0!


rc.local changed - no success
-> rc.local cannot execute export DISPLAY=:0.0! 


## Help
path for configs

# check ssd health
sudo apt -y install smartmontools




#

add Objects to Mate Panel:
dconf:
	org mate panel objects






# immer warten in autostarts, weil displaymanager nicht zuverlässig funktionieren und auch fullscreen oft fehlschlägt

partition für logs
fernüberwachung & update per lte-modem (temporär)

autostart-template?
monitoring-funktionen


caja + terminal an leiste anheften

/opt & Kiosk an caja seitenleiste


Autostart template mit beliebigem Namen




Google Chrome without pinch:
--disable-pinch
--overscroll-history-navigation=0







eom --fullscreen --slide-show dir
- slideshow ohne fading
vlc --fullscreen -loop --no-osd file



RFID 
#!/usr/bin/bash

#too lazy to find the id of the device
idvar=$(xinput list | grep 'Synaptics')
echo $idvar | grep '^id='
id=$(echo $idvar | cut -c 39-40)

#echo $id

test=$(xinput list-props 13 | grep 'Device Enabled')
test=$(echo $test|awk '{print substr($0,length($0),1)}')

if [ $test == 0 ]
then
	xinput set-prop $id "Device Enabled" 1
else
	xinput set-prop $id "Device Enabled" 0
fi

xinput test "$i" | while read -r p; do curl --data "$p" "$URL" &>/dev/null; done &